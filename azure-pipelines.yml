# Archivo de Pipeline YAML para Azure DevOps

trigger:
  - main

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'
    Python311:
      python.version: '3.11'

variables:
  AZURE_WEBAPP_NAME: "nombre_de_tu_app"  # Nombre de tu App Service
  PYTHON_VERSION: "$(python.version)"     # Versión de Python en el App Service
  AZURE_SUBSCRIPTION: "tu_subscription_id"

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Usar Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Instalar dependencias'

- script: |
    pip install pytest pytest-azurepipelines
    pytest app/app_4.py
  displayName: 'Ejecutar pruebas'

# Publicar y empaquetar el código para el despliegue
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/app'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Empaquetar código'

# Desplegar en Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(AZURE_SUBSCRIPTION)'
    appType: 'webAppLinux'  # Cambia a 'webApp' si usas Windows
    appName: '$(AZURE_WEBAPP_NAME)'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
  displayName: 'Desplegar en Azure App Service'

